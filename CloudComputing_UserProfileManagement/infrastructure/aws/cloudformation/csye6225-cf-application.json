{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Assignment 5 template for creating an EC2 instance, DynamoDBTable, S3 bucket, RDS Instance",
    "Parameters": {
        "EC2ImageId": {
            "Type": "String"
        },
        "EC2InstanceType": {
            "Type": "String"
        },
        "EC2InstanceName": {
            "Type": "String"
        },
        "EC2VolumeSize": {
            "Type": "String"
        },
        "EC2KeyName": {
            "Type": "String"
        },
        "EC2SecurityGroup": {
            "Type": "String"
        },
        "SubnetId1": {
            "Type": "String"
        },
        "SubnetId2": {
            "Type": "String"
        },
        "EC2RoleName": {
            "Type": "String"
        },
        "DynamoDBTableName": {
            "Type": "String"
        },
        "BucketName": {
            "Type": "String"
        },
        "DBEngine": {
            "Type": "String"
        },
        "EngineVersion": {
            "Type": "String"
        },
        "DBInstanceClass": {
            "Type": "String"
        },
        "DBInstanceIdentifier": {
            "Type": "String"
        },
        "MasterUsername": {
            "Type": "String"
        },
        "MasterPassword": {
            "Type": "String"
        },
        "DBName": {
            "Type": "String"
        },
        "RDSSecurityGroup": {
            "Type": "String"
        },
        "SNSTopicName": {
            "Type": "String"
        }
    },
    "Resources": {
        "MyEC2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "EC2ImageId"
                },
                "InstanceType": {
                    "Ref": "EC2InstanceType"
                },
                "DisableApiTermination": "true",
                "KeyName": {
                    "Ref": "EC2KeyName"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "EC2SecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "SubnetId1"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe \n",
                                "sudo apt-get update \n",
                                "sudo apt-get install openjdk-8-jdk -y\n",
                                "sudo apt-get install ruby -y \n",
                                "sudo apt-get install wget -y \n",
                                "sudo apt-get install python -y \n",
                                "sudo apt-get update \n",
                                "sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
                                "sudo chmod +x ./install \n",
                                "sudo ./install auto \n",
                                "sudo service codedeploy-agent start \n",
                                "sudo apt-get install tomcat8 -y \n",
                                "sudo service tomcat8 restart \n",
                                "cd /usr/share/tomcat8/bin \n",
                                "sudo touch setenv.sh \n",
                                "sudo chmod 777 setenv.sh \n",
                                "sudo echo '#!/bin/sh' >> setenv.sh \n",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=jdbc:mysql://",
                                            {
                                                "Fn::GetAtt": [
                                                    "myRDSInstance",
                                                    "Endpoint.Address"
                                                ]
                                            },
                                            ":3306/csye6225\"' >> setenv.sh \n"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=",
                                            {
                                                "Ref": "MasterUsername"
                                            },
                                            "\"' >> setenv.sh \n"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=",
                                            {
                                                "Ref": "MasterPassword"
                                            },
                                            "\"' >> setenv.sh \n"
                                        ]
                                    ]
                                },
                                "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.profiles.active=aws\"' >> setenv.sh \n",
                                "sudo service tomcat8 restart \n",
                                "sudo apt-get update \n",
                                "sudo touch /tmp/awslogs.conf \n",
                                "sudo echo '[general]' > /tmp/awslogs.conf \n",
                                "sudo echo 'state_file= /var/awslogs/agent-state' >> /tmp/awslogs.conf \n",
                                "sudo echo '[logstream1]' >> /tmp/awslogs.conf \n",
                                "sudo echo 'file = /var/log/tomcat8/csye6225-aws.log' >> /tmp/awslogs.conf \n",
                                "sudo echo 'log_group_name = csye6225-webapp' >> /tmp/awslogs.conf \n",
                                "sudo echo 'log_stream_name = csye6225-webapp' >> /tmp/awslogs.conf \n",
                                "sudo echo 'datetime_format = %d/%b/%Y:%H:%M:%S' >> /tmp/awslogs.conf \n",
                                "curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O \n",
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "sudo python ./awslogs-agent-setup.py -n -r",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "-c /tmp/awslogs.conf || error_exit 'Failed to run CloudWatch Logs agent setup' \n"
                                        ]
                                    ]
                                },
                                "cd /etc/systemd/system \n",
                                "sudo touch awslogs.service \n",
                                "sudo echo '[Unit]' >> awslogs.service \n",
                                "sudo echo 'Description=Service for CloudWatch Logs agent' >> awslogs.service \n",
                                "sudo echo 'After=rc-local.service' >> awslogs.service \n",
                                "sudo echo '[Service]' >> awslogs.service \n",
                                "sudo echo 'Type=simple' >> awslogs.service \n",
                                "sudo echo 'Restart=always' >> awslogs.service \n",
                                "sudo echo 'KillMode=process' >> awslogs.service \n",
                                "sudo echo 'TimeoutSec=infinity' >> awslogs.service \n",
                                "sudo echo 'PIDFile=/var/awslogs/state/awslogs.pid' >> awslogs.service \n",
                                "sudo echo 'ExecStart=/var/awslogs/bin/awslogs-agent-launcher.sh --start --background --pidfile $PIDFILE --user awslogs --chuid awslogs &amp;' >> awslogs.service \n",
                                "sudo echo '[Install]' >> awslogs.service \n",
                                "sudo echo 'WantedBy=multi-user.target' >> awslogs.service \n",
                                "sudo systemctl start awslogs.service \n",
                                "sudo systemctl enable awslogs.service \n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "EC2InstanceName"
                        }
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "VolumeSize": {
                                "Ref": "EC2VolumeSize"
                            }
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "myIAMInstanceProfile"
                }
            },
            "DependsOn": "myRDSInstance"
        },
        "myIAMInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2RoleName"
                    }
                ]
            }
        },
        "myDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "5",
                    "WriteCapacityUnits": "5"
                },
                "TableName": {
                    "Ref": "DynamoDBTableName"
                },
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": true
                }
            }
        },
        "myS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Description": "S3 bucket to hold website content",
            "Properties": {
                "AccessControl": "Private",
                "BucketName": {
                    "Ref": "BucketName"
                }
            }
        },
        "myRDSInstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": "10",
                "DBInstanceClass": {
                    "Ref": "DBInstanceClass"
                },
                "DBInstanceIdentifier": {
                    "Ref": "DBInstanceIdentifier"
                },
                "DBName": {
                    "Ref": "DBName"
                },
                "Engine": {
                    "Ref": "DBEngine"
                },
                "EngineVersion": {
                    "Ref": "EngineVersion"
                },
                "MasterUsername": {
                    "Ref": "MasterUsername"
                },
                "MasterUserPassword": {
                    "Ref": "MasterPassword"
                },
                "MultiAZ": "false",
                "PubliclyAccessible": "false",
                "DBSubnetGroupName": {
                    "Ref": "myRDSDBSubnet"
                },
                "VPCSecurityGroups": [
                    {
                        "Ref": "RDSSecurityGroup"
                    }
                ]
            }
        },
        "myRDSDBSubnet": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "RDS Subnet Group",
                "SubnetIds": [
                    {
                        "Ref": "SubnetId1"
                    },
                    {
                        "Ref": "SubnetId2"
                    }
                ]
            }
        },
        "mySNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "TopicName": {
                    "Ref": "SNSTopicName"
                }
            }
        }
    }
}
